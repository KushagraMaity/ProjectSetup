// <auto-generated />
using System;
using BookStoreApi.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStoreApi.Migrations
{
    [DbContext(typeof(BookDbContext))]
    [Migration("20240801173027_addDataToCurrencyTable")]
    partial class addDataToCurrencyTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStoreApi.Model.T_BOOK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("OnOfPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("T_LanguagesId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("T_LanguagesId");

                    b.ToTable("T_Books");
                });

            modelBuilder.Entity("BookStoreApi.Model.T_BookPrice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("AMOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BOOK_ID")
                        .HasColumnType("int");

                    b.Property<string>("CURRENCY_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("T_BOOKSId")
                        .HasColumnType("int");

                    b.Property<int>("T_CurrencyTypesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("T_BOOKSId");

                    b.HasIndex("T_CurrencyTypesID");

                    b.ToTable("T_BookPrices");
                });

            modelBuilder.Entity("BookStoreApi.Model.T_CurrencyType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DESCRIPTION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TITLE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("T_CurrencyTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DESCRIPTION = "Indian INR",
                            TITLE = "INR"
                        },
                        new
                        {
                            ID = 2,
                            DESCRIPTION = "Dollar",
                            TITLE = "Dollar"
                        },
                        new
                        {
                            ID = 3,
                            DESCRIPTION = "Euro",
                            TITLE = "Euro"
                        },
                        new
                        {
                            ID = 4,
                            DESCRIPTION = "Dinar",
                            TITLE = "Dinar"
                        });
                });

            modelBuilder.Entity("BookStoreApi.Model.T_Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("T_Languages");
                });

            modelBuilder.Entity("BookStoreApi.Model.T_BOOK", b =>
                {
                    b.HasOne("BookStoreApi.Model.T_Language", "T_Languages")
                        .WithMany("Books")
                        .HasForeignKey("T_LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("T_Languages");
                });

            modelBuilder.Entity("BookStoreApi.Model.T_BookPrice", b =>
                {
                    b.HasOne("BookStoreApi.Model.T_BOOK", "T_BOOKS")
                        .WithMany()
                        .HasForeignKey("T_BOOKSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreApi.Model.T_CurrencyType", "T_CurrencyTypes")
                        .WithMany("T_BookPrices")
                        .HasForeignKey("T_CurrencyTypesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("T_BOOKS");

                    b.Navigation("T_CurrencyTypes");
                });

            modelBuilder.Entity("BookStoreApi.Model.T_CurrencyType", b =>
                {
                    b.Navigation("T_BookPrices");
                });

            modelBuilder.Entity("BookStoreApi.Model.T_Language", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
